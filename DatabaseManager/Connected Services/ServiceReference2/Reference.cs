//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference2
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Alarm", Namespace="http://schemas.datacontract.org/2004/07/ScadaCore")]
    public partial class Alarm : object
    {
        
        private System.DateTime ActivationTimeField;
        
        private int PriorityField;
        
        private string TagNameField;
        
        private double ThresholdField;
        
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActivationTime
        {
            get
            {
                return this.ActivationTimeField;
            }
            set
            {
                this.ActivationTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority
        {
            get
            {
                return this.PriorityField;
            }
            set
            {
                this.PriorityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName
        {
            get
            {
                return this.TagNameField;
            }
            set
            {
                this.TagNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Threshold
        {
            get
            {
                return this.ThresholdField;
            }
            set
            {
                this.ThresholdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IAlarmService")]
    public interface IAlarmService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/AddAlarm", ReplyAction="http://tempuri.org/IAlarmService/AddAlarmResponse")]
        System.Threading.Tasks.Task AddAlarmAsync(string tagName, string type, int priority, double threshold);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/RemoveAlarm", ReplyAction="http://tempuri.org/IAlarmService/RemoveAlarmResponse")]
        System.Threading.Tasks.Task RemoveAlarmAsync(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetActiveAlarms", ReplyAction="http://tempuri.org/IAlarmService/GetActiveAlarmsResponse")]
        System.Threading.Tasks.Task<ServiceReference2.Alarm[]> GetActiveAlarmsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface IAlarmServiceChannel : ServiceReference2.IAlarmService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class AlarmServiceClient : System.ServiceModel.ClientBase<ServiceReference2.IAlarmService>, ServiceReference2.IAlarmService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public AlarmServiceClient() : 
                base(AlarmServiceClient.GetDefaultBinding(), AlarmServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IAlarmService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AlarmServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(AlarmServiceClient.GetBindingForEndpoint(endpointConfiguration), AlarmServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AlarmServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(AlarmServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AlarmServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(AlarmServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AlarmServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task AddAlarmAsync(string tagName, string type, int priority, double threshold)
        {
            return base.Channel.AddAlarmAsync(tagName, type, priority, threshold);
        }
        
        public System.Threading.Tasks.Task RemoveAlarmAsync(string tagName)
        {
            return base.Channel.RemoveAlarmAsync(tagName);
        }
        
        public System.Threading.Tasks.Task<ServiceReference2.Alarm[]> GetActiveAlarmsAsync()
        {
            return base.Channel.GetActiveAlarmsAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IAlarmService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IAlarmService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:64310/AlarmService.svc/Alarm");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return AlarmServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IAlarmService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return AlarmServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IAlarmService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IAlarmService,
        }
    }
}
